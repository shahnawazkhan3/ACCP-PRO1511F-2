==============Alert Dialog==========


AlertDialogBuilder which an inner class of AlertDialog. Its syntax is given below


) 	AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);


===============

Now you have to set the positive (yes) or negative (no) button using the object of the AlertDialogBuilder class. Its syntax is

alertDialogBuilder.setPositiveButton(CharSequence text, DialogInterface.OnClickListener listener)

alertDialogBuilder.setNegativeButton(CharSequence text, DialogInterface.OnClickListener listener)


=================

1	setIcon(Drawable icon)

				This method set the icon of the alert dialog box.

2	setCancelable(boolean cancel able)

				This method sets the property that the dialog can be cancelled or not

3	setMessage(CharSequence message)

				This method sets the message to be displayed in the alert dialog

4	setMultiChoiceItems(CharSequence[] items, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)

				This method sets list of items to be displayed in the dialog as the content. The selected option will be notified by the listener

5	setOnCancelListener(DialogInterface.OnCancelListener onCancelListener)

				This method Sets the callback that will be called if the dialog is cancelled.

6	setTitle(CharSequence title)

			This method set the title to be appear in the dialog


==============
AlertDialog alertDialog = alertDialogBuilder.create();


alertDialog.show();


==================Dialog fragment======================

Before enter into an example we should need to know dialog fragment.
Dialog fragment is a fragment which can show fragment in dialog box

public class DialogFragment extends DialogFragment {
   @Override
   public Dialog onCreateDialog(Bundle savedInstanceState) {

      // Use the Builder class for convenient dialog construction

      AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());

      builder.setPositiveButton(R.string.fire, new DialogInterface.OnClickListener() {
         public void onClick(DialogInterface dialog, int id) {
            toast.makeText(this,"enter a text here",Toast.LENTH_SHORT).show();
         }
      })
      .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
         public void onClick(DialogInterface dialog, int id) {
            finish();
         });
         // Create the AlertDialog object and return it
         return builder.create();
      }
   }




================================List dialog================================

It has used to show list of items in a dialog box.For suppose,
 user need to select a list of items or else need to click a item from multiple
 list of items.At this situation we can use list dialog.

public Dialog onCreateDialog(Bundle savedInstanceState) {

   AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());

   builder.setTitle(Pick a Color)
   
   .setItems(R.array.colors_array, new DialogInterface.OnClickListener() {

      public void onClick(DialogInterface dialog, int which) {
         // The 'which' argument contains the index position
         // of the selected item
      }
   });
   return builder.create();
}
}

======================Single-choice list dialog=============================


public Dialog onCreateDialog(Bundle savedInstanceState) {

   mSelectedItems = new ArrayList();

   AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
   
   builder.setTitle("This is list choice dialog box");

   .setMultiChoiceItems(R.array.toppings, null, new DialogInterface.OnMultiChoiceClickListener() {

      @Override

      public void onClick(DialogInterface dialog, int which, boolean isChecked) {
         
         if (isChecked) {
            // If the user checked the item, add it to the selected items

            mSelectedItems.add(which);
         }
         
         else if (mSelectedItems.contains(which)) {

            // Else, if the item is already in the array, remove it 
            mSelectedItems.remove(Integer.valueOf(which));
         }
      }
   })
   
   // Set the action buttons
   .setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {

      @Override
      public void onClick(DialogInterface dialog, int id) {
         // User clicked OK, so save the mSelectedItems results somewhere
         // or return them to the component that opened the dialog
         ...
      }
   })
   
   .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
      @Override
      public void onClick(DialogInterface dialog, int id) {
         ...
      }
   });
   return builder.create();
}


=======================================================


<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.zaaviyah.zaaviyah_alertdialog.MainActivity">


    <TextView
        android:id="@+id/textView"
        android:layout_width="match_parent"
        android:layout_height="30dp"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="75dp"
        android:text="Zaaviyah solutions "
        android:textSize="30dp"/>

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="200dp"
        android:layout_height="150dp"
        app:srcCompat="@drawable/shahlogo"
        android:layout_below="@+id/textView"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="11dp" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imageView"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="87dp"
        android:onClick="open"
        android:text="Alert dialog" />

</RelativeLayout>

============================

package com.zaaviyah.zaaviyah_alertdialog;

import android.content.DialogInterface;
import android.preference.DialogPreference;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    // create function  here
    public void open(View view){

        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);


        alertDialogBuilder.setMessage("Are you sure, You wanted to make decision");

                alertDialogBuilder.setPositiveButton("yes",new DialogInterface.OnClickListener() {

                            @Override
                            public void onClick(DialogInterface arg0, int arg1) {
                                Toast.makeText(MainActivity.this,"You clicked yes button",Toast.LENGTH_LONG).show();
                            }
                        });

        alertDialogBuilder.setNegativeButton("No",new DialogInterface.OnClickListener() {

            public void onClick(DialogInterface dialog, int which) {
                finish();
            }
        });

        AlertDialog alertDialog = alertDialogBuilder.create();
        alertDialog.show();
    }

}


